# Test the global seeds in seeds service
#
# Policy:       perEvent
# Valid:        yes
# Will succeed: yes
# Purpose:      check normal operations
#
# Note that this policy requires a plug in providing the event with a valid
# time stamp.
#

#include "messageService.fcl"

# Give this job a name.
process_name : GlobalSeedTestLinear


# Start form an empty source
source: {
  module_type : EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents : 2
} # source


services: {
  message : @local::mf_debugging
  RandomNumberGenerator: {}

  NuRandomService: {
    policy            : "perEvent"
    verbosity         :     2
    endOfJobSummary   :  true
  } # NuRandomService
  
  GlobalEngineUserTestService: {
    instances: [
      "GlobalEngineUserTestService1", "GlobalEngineUserTestService2", "a", ""
      ]
    perEventSeeds: true
  } # GlobalEngineUserTestService

} # services


physics: {
  analyzers: {
    stest01: {
      module_type   : SeedTestPolicy
      module_name   : stest01
      instanceNames : [ "a", "c" ]
      perEventSeeds : true
    }
    
    stest02: {
      module_type   : SeedTestPolicy
      module_name   : stest02
      instanceNames : [ "a", "b" ]
      perEventSeeds : true
    }
  }
  
  e1       : [stest01, stest02]
  end_paths: [e1]
  
} # physics
  
