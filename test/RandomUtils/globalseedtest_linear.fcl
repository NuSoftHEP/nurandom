# Test the global seeds in seeds service
#
# Policy:          linearMapping
# Valid:           yes
# Will succeed:    yes
# Purpose:         common configuration
#

#include "messageService.fcl"

# Give this job a name.
process_name : GlobalSeedTestLinear

# Start form an empty source
source :
{
  module_type : EmptyEvent
  maxEvents : 2
}

services: {
  message : @local::mf_interactive
  RandomNumberGenerator: {}

  NuRandomService: {
    policy            : "linearMapping"
    nJob              :   123
    maxUniqueEngines  :    20
    checkRange        :  true
    verbosity         :     2
    endOfJobSummary   :  false
  }

  GlobalEngineUserTestService: {
    instances: [
      "GlobalEngineUserTestService1", "GlobalEngineUserTestService2", "a", ""
      ]
  } # GlobalEngineUserTestService
  
} # services

physics: {
  analyzers: {
    stest01 : {
      module_type : SeedTestPolicy
      module_name : stest01
    }

    stest02 : {
      module_type : SeedTestPolicy
      module_name : stest02
      instanceNames : [ "a", "c" ]
    }
  } # analyzers

  e1: [ stest01, stest02 ]

  end_paths: [ e1 ]

} # physics
